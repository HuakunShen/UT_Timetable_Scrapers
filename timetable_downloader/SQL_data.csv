"full_course_code","courseId","code","org","orgName","courseTitle","courseDescription","prerequisite","corequisite","exclusion","recommendedPreparation","section","session","breadthCategories"
"CSC104H1-F-20199",30212,"CSC104H1","CSC","Computer Science (CSC) (ECE)","Computational Thinking","Humans have solved problems for millennia on computing devices by representing data as diverse numbers, text, images, sound and genomes, and then transforming the data.  A gentle introduction to designing programs (recipes) for systematically solving problems that crop up in diverse domains such as science, literature, and graphics.  Social and intellectual issues raised by computing.  Algorithms, hardware, software, operating systems, the limits of computation. Note: you may not take this course concurrently with any Computer Science course, but you may take <a href=""http://www.artsandscience.utoronto.ca/ofr/calendar/crs_csc.htm#CSC108H1"">CSC108H1</a>/<a href=""http://www.artsandscience.utoronto.ca/ofr/calendar/crs_csc.htm#CSC148H1"">CSC148H1</a> after <a href=""http://www.artsandscience.utoronto.ca/ofr/calendar/crs_csc.htm#CSC104H1"">CSC104H1</a>.","","","Any Computer Science course","","F","20199","The Physical and Mathematical Universes (5)"
"CSC104H1-S-20199",30212,"CSC104H1","CSC","Computer Science (CSC) (ECE)","Computational Thinking","Humans have solved problems for millennia on computing devices by representing data as diverse numbers, text, images, sound and genomes, and then transforming the data.  A gentle introduction to designing programs (recipes) for systematically solving problems that crop up in diverse domains such as science, literature, and graphics.  Social and intellectual issues raised by computing.  Algorithms, hardware, software, operating systems, the limits of computation. Note: you may not take this course concurrently with any Computer Science course, but you may take <a href=""http://www.artsandscience.utoronto.ca/ofr/calendar/crs_csc.htm#CSC108H1"">CSC108H1</a>/<a href=""http://www.artsandscience.utoronto.ca/ofr/calendar/crs_csc.htm#CSC148H1"">CSC148H1</a> after <a href=""http://www.artsandscience.utoronto.ca/ofr/calendar/crs_csc.htm#CSC104H1"">CSC104H1</a>.","","","Any Computer Science course","","S","20199","The Physical and Mathematical Universes (5)"
"CSC108H1-F-20199",30213,"CSC108H1","CSC","Computer Science (CSC) (ECE)","Introduction to Computer Programming","Programming in a language such as Python. Elementary data types, lists, maps.  Program structure: control flow, functions, classes, objects, methods. Algorithms and problem solving. Searching, sorting, and complexity. Unit testing. No prior programming experience required.<br /><br />NOTE: You may not take this course concurrently with CSC120H1/CSC148H1, but you may take CSC148H1 after CSC108H1.","","","CSC120H1, CSC121H1, CSC148H1","","F","20199","The Physical and Mathematical Universes (5)"
"CSC108H1-S-20199",30213,"CSC108H1","CSC","Computer Science (CSC) (ECE)","Introduction to Computer Programming","Programming in a language such as Python. Elementary data types, lists, maps.  Program structure: control flow, functions, classes, objects, methods. Algorithms and problem solving. Searching, sorting, and complexity. Unit testing. No prior programming experience required.<br /><br />NOTE: You may not take this course concurrently with CSC120H1/CSC148H1, but you may take CSC148H1 after CSC108H1.","","","CSC120H1, CSC121H1, CSC148H1","","S","20199","The Physical and Mathematical Universes (5)"
"CSC148H1-F-20199",30216,"CSC148H1","CSC","Computer Science (CSC) (ECE)","Introduction to Computer Science","Abstract data types and data structures for implementing them. Linked data structures. Encapsulation and information-hiding. Object-oriented programming. Specifications. Analyzing the efficiency of programs. Recursion. This course assumes programming experience as provided by CSC108H1. Students who already have this background may consult the Computer Science Undergraduate Office for advice about skipping CSC108H1. Practical (P) sections consist of supervised work in the computing laboratory. These sections are offered when facilities are available, and attendance is required. NOTE: Students may go to their college to drop down from CSC148H1 to CSC108H1. See above for the drop down deadline.","CSC108H1/(equivalent programming experience)","","CSC207H1","","F","20199","The Physical and Mathematical Universes (5)"
"CSC148H1-S-20199",30216,"CSC148H1","CSC","Computer Science (CSC) (ECE)","Introduction to Computer Science","Abstract data types and data structures for implementing them. Linked data structures. Encapsulation and information-hiding. Object-oriented programming. Specifications. Analyzing the efficiency of programs. Recursion. This course assumes programming experience as provided by CSC108H1. Students who already have this background may consult the Computer Science Undergraduate Office for advice about skipping CSC108H1. Practical (P) sections consist of supervised work in the computing laboratory. These sections are offered when facilities are available, and attendance is required. NOTE: Students may go to their college to drop down from CSC148H1 to CSC108H1. See above for the drop down deadline.","CSC108H1/(equivalent programming experience)","","CSC207H1","","S","20199","The Physical and Mathematical Universes (5)"
"CSC165H1-F-20199",30217,"CSC165H1","CSC","Computer Science (CSC) (ECE)","Mathematical Expression and Reasoning for Computer Science","Introduction to abstraction and rigour. Informal introduction to logical notation and reasoning. Understanding, using and developing precise expressions of mathematical ideas, including definitions and theorems. Structuring proofs to improve presentation and comprehension. General problem-solving techniques. Running time analysis of iterative programs. Formal definition of Big-Oh. Diagonalization, the Halting Problem, and some reductions. Unified approaches to programming and theoretical problems.","","CSC108H1/CSC120H1/(equivalent programming experience)","CSC236H1, CSC240H1","","F","20199","The Physical and Mathematical Universes (5)"
"CSC165H1-S-20199",30217,"CSC165H1","CSC","Computer Science (CSC) (ECE)","Mathematical Expression and Reasoning for Computer Science","Introduction to abstraction and rigour. Informal introduction to logical notation and reasoning. Understanding, using and developing precise expressions of mathematical ideas, including definitions and theorems. Structuring proofs to improve presentation and comprehension. General problem-solving techniques. Running time analysis of iterative programs. Formal definition of Big-Oh. Diagonalization, the Halting Problem, and some reductions. Unified approaches to programming and theoretical problems.","","CSC108H1/CSC120H1/(equivalent programming experience)","CSC236H1, CSC240H1","","S","20199","The Physical and Mathematical Universes (5)"
"CSC197H1-F-20199",34722,"CSC197H1","CSC","Computer Science (CSC) (ECE)","What, Who, How: Privacy in the Age of Big Data Collection","The rapid advance of technology has brought remarkable changes to how we conduct our daily lives, from how we communicate, consume news and data, and purchase goods. As we increase our online activity, so too do we increase the amount of personal data that we're sharing, often without realizing it. The questions of exactly what data is being collected, who is collecting and accessing this data, and how this data is being used, have significant implications for both individuals and our larger social and political institutions. Organized by a wide variety of case studies drawn from current events, we'll study how personal data can be collected and tracked, how personal and social factors may influence our own decisions about whether and how much to share our data, and what broader political and legal tools are used to either protect or subvert individual privacy. Restricted to first-year students. Not eligible for CR/NCR option.","","","","","F","20199","Society and its Institutions (3)"
"CSC198H1-F-20199",34723,"CSC198H1","CSC","Computer Science (CSC) (ECE)","Computing for Science","Computational skills for the modern practice of basic and applied science. Applied computer programming with an emphasis on practical examples related to the simulation of matter, drawing from scientific disciplines including chemistry, biology, materials science, and physics. Studio format with a mixture of lecture, guided programming, and open scientific problem solving. Students will be exposed to Python numerical and data analysis libraries. Restricted to first-year students. Not eligible for CR/NCR option.","","","Any CSC course, except CSC104H1","","F","20199","The Physical and Mathematical Universes (5)"
"CSC198H1-S-20199",34723,"CSC198H1","CSC","Computer Science (CSC) (ECE)","Computing for Science","Computational skills for the modern practice of basic and applied science. Applied computer programming with an emphasis on practical examples related to the simulation of matter, drawing from scientific disciplines including chemistry, biology, materials science, and physics. Studio format with a mixture of lecture, guided programming, and open scientific problem solving. Students will be exposed to Python numerical and data analysis libraries. Restricted to first-year students. Not eligible for CR/NCR option.","","","Any CSC course, except CSC104H1","","S","20199","The Physical and Mathematical Universes (5)"
"CSC199H1-S-20199",34724,"CSC199H1","CSC","Computer Science (CSC) (ECE)","Intelligence, Artificial and Human","What is human intelligence? How close are we to replicating it? How productive/reductive is the brain-computer analogy? What ethical challenges are posed by AI on workers, society, and the environment? Can we put a hold on &quot;progress&quot;? Is Silicon Valley the seat of a new techno-religion? What can they teach us about today's research priorities? What insight (or inspiration) can we get from works of science fiction about the future of human-AI interaction? Through reading discussion, written assignment, and workshops, this seminar will present students with the opportunity to integrate their computer science interests with philosophy, history, and literature. <em>There is an equivalent course offered by St. Michael’s College. Students may take one or the other but not both. </em>Restricted to first-year students. Not eligible for CR/NCR option.","","","SMC199H1 (Intelligence, Artificial and Human)","","S","20199","Society and its Institutions (3)"
"CSC207H1-F-20199",30219,"CSC207H1","CSC","Computer Science (CSC) (ECE)","Software Design","An introduction to software design and development concepts, methods, and tools using a statically-typed object-oriented programming language such as Java. Topics from: version control, unit testing, refactoring, object-oriented design and development, design patterns, advanced IDE usage, regular expressions, and reflection. Representation of floating-point numbers and introduction to numerical computation.","60% or higher in CSC148H1 (Please note: The minimum prerequisite grade in CSC148H1 is lower than the minimum grade for program admission in Computer Science. If you take this course when your grade in CSC148H1 is lower than the requirement for program admission, you will be unable to enrol in a Computer Science program. If you hope to enrol in a Computer Science program in future, please ensure that you satisfy the program admission grade requirements in CSC148H1 before completing CSC207H1.)","","","","F","20199","The Physical and Mathematical Universes (5)"
"CSC207H1-S-20199",30219,"CSC207H1","CSC","Computer Science (CSC) (ECE)","Software Design","An introduction to software design and development concepts, methods, and tools using a statically-typed object-oriented programming language such as Java. Topics from: version control, unit testing, refactoring, object-oriented design and development, design patterns, advanced IDE usage, regular expressions, and reflection. Representation of floating-point numbers and introduction to numerical computation.","60% or higher in CSC148H1 (Please note: The minimum prerequisite grade in CSC148H1 is lower than the minimum grade for program admission in Computer Science. If you take this course when your grade in CSC148H1 is lower than the requirement for program admission, you will be unable to enrol in a Computer Science program. If you hope to enrol in a Computer Science program in future, please ensure that you satisfy the program admission grade requirements in CSC148H1 before completing CSC207H1.)","","","","S","20199","The Physical and Mathematical Universes (5)"
"CSC209H1-F-20199",30220,"CSC209H1","CSC","Computer Science (CSC) (ECE)","Software Tools and Systems Programming","Software techniques in a Unix-style environment, using scripting languages and a machine-oriented programming language (typically C). What goes on in the operating system when programs are executed. Core topics: creating and using software tools, pipes and filters, file processing, shell programming, processes, system calls, signals, basic network programming.","CSC207H1","","CSC372H1, CSC369H1, CSC469H1","","F","20199","The Physical and Mathematical Universes (5)"
"CSC209H1-S-20199",30220,"CSC209H1","CSC","Computer Science (CSC) (ECE)","Software Tools and Systems Programming","Software techniques in a Unix-style environment, using scripting languages and a machine-oriented programming language (typically C). What goes on in the operating system when programs are executed. Core topics: creating and using software tools, pipes and filters, file processing, shell programming, processes, system calls, signals, basic network programming.","CSC207H1","","CSC372H1, CSC369H1, CSC469H1","","S","20199","The Physical and Mathematical Universes (5)"
"CSC236H1-F-20199",30221,"CSC236H1","CSC","Computer Science (CSC) (ECE)","Introduction to the Theory of Computation","The application of logic and proof techniques to Computer Science. Mathematical induction; correctness proofs for iterative and recursive algorithms; recurrence equations and their solutions; introduction to automata and formal languages. This course assumes university-level experience with proof techniques and algorithmic complexity as provided by CSC165H1. Very strong students who already have this experience (e.g. successful completion of MAT157Y1) may consult the undergraduate office about proceeding directly into CSC236H1 or CSC240H1.","60% or higher in CSC148H1, 60% or higher in CSC165H1 (Please note: The minimum prerequisite grade in CSC148H1 and CSC165H1/CSC240H1 is lower than the minimum grade for program admission in Computer Science. If you take this course when your grade in CSC165H1/CSC240H1 is lower than the requirement for program admission, you will be unable to enrol in a Computer Science program. If you hope to enrol in a Computer Science program in future, please ensure that you satisfy the program admission grade requirements in CSC165H1/CSC240H1 before completing CSC236H1. Students will not be permitted to retake CSC165H1 after completing CSC236H1.)","","CSC240H1","","F","20199","The Physical and Mathematical Universes (5)"
"CSC236H1-S-20199",30221,"CSC236H1","CSC","Computer Science (CSC) (ECE)","Introduction to the Theory of Computation","The application of logic and proof techniques to Computer Science. Mathematical induction; correctness proofs for iterative and recursive algorithms; recurrence equations and their solutions; introduction to automata and formal languages. This course assumes university-level experience with proof techniques and algorithmic complexity as provided by CSC165H1. Very strong students who already have this experience (e.g. successful completion of MAT157Y1) may consult the undergraduate office about proceeding directly into CSC236H1 or CSC240H1.","60% or higher in CSC148H1, 60% or higher in CSC165H1 (Please note: The minimum prerequisite grade in CSC148H1 and CSC165H1/CSC240H1 is lower than the minimum grade for program admission in Computer Science. If you take this course when your grade in CSC165H1/CSC240H1 is lower than the requirement for program admission, you will be unable to enrol in a Computer Science program. If you hope to enrol in a Computer Science program in future, please ensure that you satisfy the program admission grade requirements in CSC165H1/CSC240H1 before completing CSC236H1. Students will not be permitted to retake CSC165H1 after completing CSC236H1.)","","CSC240H1","","S","20199","The Physical and Mathematical Universes (5)"
"CSC240H1-S-20199",30222,"CSC240H1","CSC","Computer Science (CSC) (ECE)","Enriched Introduction to the Theory of Computation","The rigorous application of logic and proof techniques to Computer Science. Propositional and predicate logic; mathematical induction and other basic proof techniques; correctness proofs for iterative and recursive algorithms; recurrence equations and their solutions (including the Master Theorem); introduction to automata and formal languages. This course covers the same topics as CSC236H1, together with selected material from CSC165H1, but at a faster pace, in greater depth and with more rigour, and with more challenging assignments. Greater emphasis will be placed on proofs and theoretical analysis. Certain topics briefly mentioned in CSC165H1 or CSC236H1 may be covered in more detail in this course, and some additional topics may also be covered. NOTES: <ol> <li>If you completed CSC165H1 with a course grade less than 85, you should take CSC236H1 instead of CSC240H1.</li> <li>Students may go to their college to drop down from CSC240H1 to CSC165H1 (or to CSC236H1 if they have already","","CSC148H1; MAT137Y1/MAT157Y1","CSC236H1, CSC263H1/CSC265H1","","S","20199","The Physical and Mathematical Universes (5)"
"CSC258H1-F-20199",30223,"CSC258H1","CSC","Computer Science (CSC) (ECE)","Computer Organization","Computer structures, machine languages, instruction execution, addressing techniques, and digital representation of data. Computer system organization, memory storage devices, and microprogramming. Block diagram circuit realizations of memory, control and arithmetic functions. There are a number of laboratory periods in which students conduct experiments with digital logic circuits. ","60% or higher in CSC148H1, 60% or higher in CSC165H1/CSC240H1 (Please note: The minimum prerequisite grades in CSC148H1 and CSC165H1/CSC240H1 are lower than the minimum grades for program admission in Computer Science. If you take this course when your grade in CSC148H1 or CSC165H1/CSC240H1 is lower than the requirement for program admission, you will be unable to enrol in a Computer Science program. If you hope to enrol in a Computer Science program in future, please ensure that you satisfy the program admission grade requirements in CSC148H1 and CSC165H1/?CSC240H1 before completing CSC258H1.)","","","","F","20199","The Physical and Mathematical Universes (5)"
"CSC258H1-S-20199",30223,"CSC258H1","CSC","Computer Science (CSC) (ECE)","Computer Organization","Computer structures, machine languages, instruction execution, addressing techniques, and digital representation of data. Computer system organization, memory storage devices, and microprogramming. Block diagram circuit realizations of memory, control and arithmetic functions. There are a number of laboratory periods in which students conduct experiments with digital logic circuits. ","60% or higher in CSC148H1, 60% or higher in CSC165H1/CSC240H1 (Please note: The minimum prerequisite grades in CSC148H1 and CSC165H1/CSC240H1 are lower than the minimum grades for program admission in Computer Science. If you take this course when your grade in CSC148H1 or CSC165H1/CSC240H1 is lower than the requirement for program admission, you will be unable to enrol in a Computer Science program. If you hope to enrol in a Computer Science program in future, please ensure that you satisfy the program admission grade requirements in CSC148H1 and CSC165H1/?CSC240H1 before completing CSC258H1.)","","","","S","20199","The Physical and Mathematical Universes (5)"
"CSC263H1-F-20199",30224,"CSC263H1","CSC","Computer Science (CSC) (ECE)","Data Structures and Analysis","Algorithm analysis: worst-case, average-case, and amortized complexity. Expected worst-case complexity, randomized quicksort and selection.  Standard abstract data types, such as graphs, dictionaries, priority queues, and disjoint sets. A variety of data structures for implementing these abstract data types, such as balanced search trees, hashing, heaps, and disjoint forests. Design and comparison of data structures. Introduction to lower bounds.","CSC207H1, CSC236H1/CSC240H1; STA247H1/STA255H1/STA257H1","","CSC265H1","","F","20199","The Physical and Mathematical Universes (5)"
"CSC263H1-S-20199",30224,"CSC263H1","CSC","Computer Science (CSC) (ECE)","Data Structures and Analysis","Algorithm analysis: worst-case, average-case, and amortized complexity. Expected worst-case complexity, randomized quicksort and selection.  Standard abstract data types, such as graphs, dictionaries, priority queues, and disjoint sets. A variety of data structures for implementing these abstract data types, such as balanced search trees, hashing, heaps, and disjoint forests. Design and comparison of data structures. Introduction to lower bounds.","CSC207H1, CSC236H1/CSC240H1; STA247H1/STA255H1/STA257H1","","CSC265H1","","S","20199","The Physical and Mathematical Universes (5)"
"CSC265H1-F-20199",30225,"CSC265H1","CSC","Computer Science (CSC) (ECE)","Enriched Data Structures and Analysis","This course covers the same topics as CSC263H1, but at a faster pace, in greater depth and with more rigour, and with more challenging assignments. Greater emphasis will be placed on proofs, theoretical analysis, and creative problem-solving. Certain topics briefly mentioned in CSC263H1 may be covered in more detail in this course, and some additional topics may also be covered. Students without the exact course prerequisites but with a strong mathematical background are encouraged to consult the Department about the possibility of taking this course.  NOTE: Students may go to their college to drop down from <a href=""http://www.artsandscience.utoronto.ca/ofr/calendar/crs_csc.htm#CSC265H1"">CSC265H1</a> to <a href=""http://www.artsandscience.utoronto.ca/ofr/calendar/crs_csc.htm#CSC263H1"">CSC263H1</a>. See above for the drop down deadline.","CSC240H1 or an A- in CSC236H1","STA247H1/STA255H1/STA257H1","CSC263H1","","F","20199","The Physical and Mathematical Universes (5)"
"CSC299Y1-Y-20199",30226,"CSC299Y1","CSC","Computer Science (CSC) (ECE)","Rsch Opportunity Prg","","","","","","Y","20199",""
"CSC300H1-F-20199",30227,"CSC300H1","CSC","Computer Science (CSC) (ECE)","Computers and Society","Privacy and Freedom of Information; recent Canadian legislation and reports. Computers and work; employment levels, quality of working life. Electronic fund transfer systems; transborder data flows. Computers and bureaucratization. Computers in the home; public awareness about computers. Robotics. Professionalism and the ethics of computers. The course is designed not only for science students, but also those in social sciences or humanities.","Any half-course on computing","","NOTE: Students not enrolled in the Computer Science Major or Specialist program at the UTSG, UTM, or UTSC are limited to a maximum of three 300-/400-level CSC/ECE half-courses.","","F","20199","Society and its Institutions (3)"
"CSC300H1-S-20199",30227,"CSC300H1","CSC","Computer Science (CSC) (ECE)","Computers and Society","Privacy and Freedom of Information; recent Canadian legislation and reports. Computers and work; employment levels, quality of working life. Electronic fund transfer systems; transborder data flows. Computers and bureaucratization. Computers in the home; public awareness about computers. Robotics. Professionalism and the ethics of computers. The course is designed not only for science students, but also those in social sciences or humanities.","Any half-course on computing","","NOTE: Students not enrolled in the Computer Science Major or Specialist program at the UTSG, UTM, or UTSC are limited to a maximum of three 300-/400-level CSC/ECE half-courses.","","S","20199","Society and its Institutions (3)"
"CSC301H1-F-20199",30228,"CSC301H1","CSC","Computer Science (CSC) (ECE)","Introduction to Software Engineering","An introduction to agile development methods appropriate for medium-sized teams and rapidly-moving projects. Basic software development infrastructure; requirements elicitation and tracking; estimation and prioritization; teamwork skills; basic UML; design patterns and refactoring; security, discussion of ethical issues, and professional responsibility.","CSC209H1, CSC263H1/CSC265H1","","NOTE: Students not enrolled in the Computer Science Major or Specialist program at the UTSG, UTM, or UTSC are limited to a maximum of three 300-/400-level CSC/ECE half-courses.","","F","20199","The Physical and Mathematical Universes (5)"
"CSC301H1-S-20199",30228,"CSC301H1","CSC","Computer Science (CSC) (ECE)","Introduction to Software Engineering","An introduction to agile development methods appropriate for medium-sized teams and rapidly-moving projects. Basic software development infrastructure; requirements elicitation and tracking; estimation and prioritization; teamwork skills; basic UML; design patterns and refactoring; security, discussion of ethical issues, and professional responsibility.","CSC209H1, CSC263H1/CSC265H1","","NOTE: Students not enrolled in the Computer Science Major or Specialist program at the UTSG, UTM, or UTSC are limited to a maximum of three 300-/400-level CSC/ECE half-courses.","","S","20199","The Physical and Mathematical Universes (5)"
"CSC302H1-F-20199",30229,"CSC302H1","CSC","Computer Science (CSC) (ECE)","Engineering Large Software Systems","An introduction to the theory and practice of large-scale software system design, development, and deployment. Project management; advanced UML; reverse engineering; requirements inspection; verification and validation; software architecture; performance modelling and analysis.","CSC301H1","","NOTE: Students not enrolled in the Computer Science Major or Specialist program at the UTSG, UTM, or UTSC are limited to a maximum of three 300-/400-level CSC/ECE half-courses.","","F","20199","The Physical and Mathematical Universes (5)"
"CSC302H1-S-20199",30229,"CSC302H1","CSC","Computer Science (CSC) (ECE)","Engineering Large Software Systems","An introduction to the theory and practice of large-scale software system design, development, and deployment. Project management; advanced UML; reverse engineering; requirements inspection; verification and validation; software architecture; performance modelling and analysis.","CSC301H1","","NOTE: Students not enrolled in the Computer Science Major or Specialist program at the UTSG, UTM, or UTSC are limited to a maximum of three 300-/400-level CSC/ECE half-courses.","","S","20199","The Physical and Mathematical Universes (5)"
"CSC303H1-S-20199",30230,"CSC303H1","CSC","Computer Science (CSC) (ECE)","Social and Information Networks","A course on how networks underlie the social, technological, and natural worlds, with an emphasis on developing intuitions for broadly applicable concepts in network analysis. Topics include: introductions to graph theory, network concepts, and game theory; social networks; information networks; the aggregate behaviour of markets and crowds; network dynamics; information diffusion; popular concepts such as &quot;six degrees of separation,&quot; the &quot;friendship paradox,&quot; and the &quot;wisdom of crowds.&quot;","CSC263H1/CSC265H1, STA247H1/STA255H1/STA257H1/ECO227Y1, MAT221H1/MAT223H1/MAT240H1","","CSCC46H3. NOTE: Students not enrolled in the Computer Science Major or Specialist program at the UTSG, UTM, or UTSC are limited to a maximum of three 300-/400-level CSC/ECE half-courses.","","S","20199","The Physical and Mathematical Universes (5)"
"CSC304H1-F-20199",30231,"CSC304H1","CSC","Computer Science (CSC) (ECE)","Algorithmic Game Theory and Mechanism Design","A mathematical and computational introduction to game theory and mechanism design. Analysis of equilibria in games and computation of price of anarchy. Design and analysis mechanisms with monetary transfers (such as auctions). Design and analysis of mechanisms without monetary transfers (such as voting and matching). This course is intended for economics, mathematics, and computer science students.","STA247H1/STA255H1/STA257H1/PSY201H1/ECO227Y1, (MAT135H1, MAT136H1)/MAT137Y1/MAT157Y1","","NOTE: Students not enrolled in the Computer Science Major or Specialist program at the UTSG, UTM, or UTSC are limited to a maximum of three 300-/400-level CSC/ECE half-courses.","MAT223H1, CSC373H1","F","20199","The Physical and Mathematical Universes (5)"
"CSC309H1-F-20199",30232,"CSC309H1","CSC","Computer Science (CSC) (ECE)","Programming on the Web","An introduction to software development on the web. Concepts underlying the development of programs that operate on the web; survey of technological alternatives; greater depth on some technologies. Operational concepts of the internet and the web, static client content, dynamic client content, dynamically served content, n-tiered architectures, web development processes, and security on the web. Assignments involve increasingly more complex web-based programs. Guest lecturers from leading e-commerce firms will describe the architecture and operation of their web sites.","CSC209H1","","NOTE: Students not enrolled in the Computer Science Major or Specialist program at the UTSG, UTM, or UTSC are limited to a maximum of three 300-/400-level CSC/ECE half-courses.","CSC343H1","F","20199","The Physical and Mathematical Universes (5)"
"CSC309H1-S-20199",30232,"CSC309H1","CSC","Computer Science (CSC) (ECE)","Programming on the Web","An introduction to software development on the web. Concepts underlying the development of programs that operate on the web; survey of technological alternatives; greater depth on some technologies. Operational concepts of the internet and the web, static client content, dynamic client content, dynamically served content, n-tiered architectures, web development processes, and security on the web. Assignments involve increasingly more complex web-based programs. Guest lecturers from leading e-commerce firms will describe the architecture and operation of their web sites.","CSC209H1","","NOTE: Students not enrolled in the Computer Science Major or Specialist program at the UTSG, UTM, or UTSC are limited to a maximum of three 300-/400-level CSC/ECE half-courses.","CSC343H1","S","20199","The Physical and Mathematical Universes (5)"
"CSC311H1-F-20199",34725,"CSC311H1","CSC","Computer Science (CSC) (ECE)","Introduction to Machine Learning","An introduction to methods for automated learning of relationships on the basis of empirical data. Classification and regression using nearest neighbour methods, decision trees, linear models, and neural networks. Clustering algorithms. Problems of overfitting and of assessing accuracy. Basics of reinforcement learning.","CSC207H1, MAT235Y1/MAT237Y1/MAT257Y1/(minimum of 77% in MAT135H1 and MAT136H1)/(minimum of 73% in MAT137Y1)/(minimum of 67% in MAT157Y1), MAT221H1/MAT223H1/MAT240H1, STA247H1/STA255H1/STA257H1","","CSC411H1, STA314H1, ECE421H1. NOTE: Students not enrolled in the Computer Science Major or Specialist program at the UTSG, UTM, or UTSC are limited to a maximum of three 300-/400-level CSC/ECE half-courses.","","F","20199","The Physical and Mathematical Universes (5)"
"CSC311H1-S-20199",34725,"CSC311H1","CSC","Computer Science (CSC) (ECE)","Introduction to Machine Learning","An introduction to methods for automated learning of relationships on the basis of empirical data. Classification and regression using nearest neighbour methods, decision trees, linear models, and neural networks. Clustering algorithms. Problems of overfitting and of assessing accuracy. Basics of reinforcement learning.","CSC207H1, MAT235Y1/MAT237Y1/MAT257Y1/(minimum of 77% in MAT135H1 and MAT136H1)/(minimum of 73% in MAT137Y1)/(minimum of 67% in MAT157Y1), MAT221H1/MAT223H1/MAT240H1, STA247H1/STA255H1/STA257H1","","CSC411H1, STA314H1, ECE421H1. NOTE: Students not enrolled in the Computer Science Major or Specialist program at the UTSG, UTM, or UTSC are limited to a maximum of three 300-/400-level CSC/ECE half-courses.","","S","20199","The Physical and Mathematical Universes (5)"
"CSC318H1-F-20199",30234,"CSC318H1","CSC","Computer Science (CSC) (ECE)","The Design of Interactive Computational Media","User-centred design of interactive systems; methodologies, principles, and metaphors; task analysis. Interdisciplinary design; the role of graphic design, industrial design, and the behavioural sciences. Interactive hardware and software; concepts from computer graphics. Typography, layout, colour, sound, video, gesture, and usability enhancements. Classes of interactive graphical media; direct manipulation systems, extensible systems, rapid prototyping tools. Students work on projects in interdisciplinary teams.","Any CSC half-course","","NOTE: Students not enrolled in the Computer Science Major or Specialist program at the UTSG, UTM, or UTSC are limited to a maximum of three 300-/400-level CSC/ECE half-courses.","CSC300H1 provides useful background for work in CSC318H1, so if you plan to take CSC300H1 then you should do it before CSC318H1","F","20199","The Physical and Mathematical Universes (5)"
"CSC318H1-S-20199",30234,"CSC318H1","CSC","Computer Science (CSC) (ECE)","The Design of Interactive Computational Media","User-centred design of interactive systems; methodologies, principles, and metaphors; task analysis. Interdisciplinary design; the role of graphic design, industrial design, and the behavioural sciences. Interactive hardware and software; concepts from computer graphics. Typography, layout, colour, sound, video, gesture, and usability enhancements. Classes of interactive graphical media; direct manipulation systems, extensible systems, rapid prototyping tools. Students work on projects in interdisciplinary teams.","Any CSC half-course","","NOTE: Students not enrolled in the Computer Science Major or Specialist program at the UTSG, UTM, or UTSC are limited to a maximum of three 300-/400-level CSC/ECE half-courses.","CSC300H1 provides useful background for work in CSC318H1, so if you plan to take CSC300H1 then you should do it before CSC318H1","S","20199","The Physical and Mathematical Universes (5)"
"CSC320H1-F-20199",30235,"CSC320H1","CSC","Computer Science (CSC) (ECE)","Introduction to Visual Computing","Image synthesis and image analysis aimed at students with an interest in computer graphics, computer vision, or the visual arts. Focus on three major topics: (1) visual computing principles—computational and mathematical methods for creating, capturing, analyzing, and manipulating digital photographs (image acquisition, basic image processing, image warping, anti-aliasing); (2) digital special effects—applying these principles to create special effects found in movies and commercials; (3) visual programming—using C/C++ and OpenGL to create graphical user interfaces for synthesizing and manipulating photographs. The course requires the ability to use differential calculus in several variables and linear algebra.","CSC209H1/(CSC207H1, proficiency in C or C++); MAT221H1/MAT223H1/MAT240H1, (MAT136H1 with a minimum mark of 77)/(MAT137Y1 with a minimum mark of 73)/(MAT157Y1 with a minimum mark of 67)/MAT235Y1/MAT237Y1/MAT257Y1","","NOTE: Students not enrolled in the Computer Science Major or Specialist program at the UTSG, UTM, or UTSC are limited to a maximum of three 300-/400-level CSC/ECE half-courses.","MAT235Y1/MAT237Y1/MAT257Y1","F","20199",""
"CSC320H1-S-20199",30235,"CSC320H1","CSC","Computer Science (CSC) (ECE)","Introduction to Visual Computing","Image synthesis and image analysis aimed at students with an interest in computer graphics, computer vision, or the visual arts. Focus on three major topics: (1) visual computing principles—computational and mathematical methods for creating, capturing, analyzing, and manipulating digital photographs (image acquisition, basic image processing, image warping, anti-aliasing); (2) digital special effects—applying these principles to create special effects found in movies and commercials; (3) visual programming—using C/C++ and OpenGL to create graphical user interfaces for synthesizing and manipulating photographs. The course requires the ability to use differential calculus in several variables and linear algebra.","CSC209H1/(CSC207H1, proficiency in C or C++); MAT221H1/MAT223H1/MAT240H1, (MAT136H1 with a minimum mark of 77)/(MAT137Y1 with a minimum mark of 73)/(MAT157Y1 with a minimum mark of 67)/MAT235Y1/MAT237Y1/MAT257Y1","","NOTE: Students not enrolled in the Computer Science Major or Specialist program at the UTSG, UTM, or UTSC are limited to a maximum of three 300-/400-level CSC/ECE half-courses.","MAT235Y1/MAT237Y1/MAT257Y1","S","20199",""
"CSC324H1-F-20199",30236,"CSC324H1","CSC","Computer Science (CSC) (ECE)","Principles of Programming Languages","Programming principles common in modern languages; details of commonly used paradigms. The structure and meaning of code. Scope, control flow, datatypes, and parameter passing. Two non-procedural, non-object-oriented programming paradigms: functional programming (illustrated by languages such as Lisp/Scheme, ML or Haskell) and logic programming (typically illustrated in Prolog).","CSC263H1/CSC265H1","","NOTE: Students not enrolled in the Computer Science Major or Specialist program at the UTSG, UTM, or UTSC are limited to a maximum of three 300-/400-level CSC/ECE half-courses.","","F","20199","The Physical and Mathematical Universes (5)"
"CSC324H1-S-20199",30236,"CSC324H1","CSC","Computer Science (CSC) (ECE)","Principles of Programming Languages","Programming principles common in modern languages; details of commonly used paradigms. The structure and meaning of code. Scope, control flow, datatypes, and parameter passing. Two non-procedural, non-object-oriented programming paradigms: functional programming (illustrated by languages such as Lisp/Scheme, ML or Haskell) and logic programming (typically illustrated in Prolog).","CSC263H1/CSC265H1","","NOTE: Students not enrolled in the Computer Science Major or Specialist program at the UTSG, UTM, or UTSC are limited to a maximum of three 300-/400-level CSC/ECE half-courses.","","S","20199","The Physical and Mathematical Universes (5)"
"CSC336H1-F-20199",30237,"CSC336H1","CSC","Computer Science (CSC) (ECE)","Numerical Methods","The study of computational methods for solving problems in linear algebra, non-linear equations, and approximation. The aim is to give students a basic understanding of both floating-point arithmetic and the implementation of algorithms used to solve numerical problems, as well as a familiarity with current numerical computing environments.","CSC148H1; MAT133Y1(70%)/(MAT135H1, MAT136H1)/MAT135Y1/MAT137Y1/MAT157Y1, MAT221H1/MAT223H1/MAT240H1","","CSC350H1, CSC351H1. NOTE: Students not enrolled in the Computer Science Major or Specialist program at the UTSG, UTM, or UTSC are limited to a maximum of three 300-/400-level CSC/ECE half-courses.","","F","20199","The Physical and Mathematical Universes (5)"
"CSC336H1-S-20199",30237,"CSC336H1","CSC","Computer Science (CSC) (ECE)","Numerical Methods","The study of computational methods for solving problems in linear algebra, non-linear equations, and approximation. The aim is to give students a basic understanding of both floating-point arithmetic and the implementation of algorithms used to solve numerical problems, as well as a familiarity with current numerical computing environments.","CSC148H1; MAT133Y1(70%)/(MAT135H1, MAT136H1)/MAT135Y1/MAT137Y1/MAT157Y1, MAT221H1/MAT223H1/MAT240H1","","CSC350H1, CSC351H1. NOTE: Students not enrolled in the Computer Science Major or Specialist program at the UTSG, UTM, or UTSC are limited to a maximum of three 300-/400-level CSC/ECE half-courses.","","S","20199","The Physical and Mathematical Universes (5)"
"CSC343H1-F-20199",30238,"CSC343H1","CSC","Computer Science (CSC) (ECE)","Introduction to Databases","Introduction to database management systems. The relational data model. Relational algebra. Querying and updating databases: the query language SQL. Application programming with SQL. Integrity constraints, normal forms, and database design. Elements of database system technology: query processing, transaction management.","CSC165H1/CSC240H1/(MAT135H1, MAT136H1)/MAT135Y1/MAT137Y1/MAT157Y1; CSC207H1. Prerequisite for Engineering students only: ECE345H1/ESC190H1/CSC190H1/CSC192H1","","CSC443H1. NOTE: Students not enrolled in the Computer Science Major or Specialist program at the UTSG, UTM, or UTSC are limited to a maximum of three 300-/400-level CSC/ECE half-courses.","","F","20199","The Physical and Mathematical Universes (5)"
"CSC343H1-S-20199",30238,"CSC343H1","CSC","Computer Science (CSC) (ECE)","Introduction to Databases","Introduction to database management systems. The relational data model. Relational algebra. Querying and updating databases: the query language SQL. Application programming with SQL. Integrity constraints, normal forms, and database design. Elements of database system technology: query processing, transaction management.","CSC165H1/CSC240H1/(MAT135H1, MAT136H1)/MAT135Y1/MAT137Y1/MAT157Y1; CSC207H1. Prerequisite for Engineering students only: ECE345H1/ESC190H1/CSC190H1/CSC192H1","","CSC443H1. NOTE: Students not enrolled in the Computer Science Major or Specialist program at the UTSG, UTM, or UTSC are limited to a maximum of three 300-/400-level CSC/ECE half-courses.","","S","20199","The Physical and Mathematical Universes (5)"
"CSC358H1-F-20199",30239,"CSC358H1","CSC","Computer Science (CSC) (ECE)","Principles of Computer Networks","Introduction to computer networks with an emphasis on fundamental principles. Basic understanding of computer networks and network protocols. Topics include network hardware and software, routing, addressing, congestion control, reliable data transfer, performance analysis, local area networks, and TCP/IP.","CSC209H1, CSC258H1, CSC263H1/CSC265H1, STA247H1/STA255H1/STA257H1/ECO227Y1","","NOTE: Students not enrolled in the Computer Science Major or Specialist program at the UTSG, UTM, or UTSC are limited to a maximum of three 300-/400-level CSC/ECE half-courses.","","F","20199","The Physical and Mathematical Universes (5)"
"CSC367H1-S-20199",30240,"CSC367H1","CSC","Computer Science (CSC) (ECE)","Parallel Programming","Introduction to aspects of parallel programming. Topics include computer instruction execution, instruction-level parallelism, memory system performance, task and data parallelism, parallel models (shared memory, message passing), synchronization, scalability and Amdahl's law, Flynn taxonomy, vector processing and parallel computing architectures.","CSC258H1, CSC209H1","","NOTE: Students not enrolled in the Computer Science Major or Specialist program at the UTSG, UTM, or UTSC are limited to a maximum of three 300-/400-level CSC/ECE half-courses.","","S","20199","The Physical and Mathematical Universes (5)"
"CSC369H1-F-20199",30241,"CSC369H1","CSC","Computer Science (CSC) (ECE)","Operating Systems","Principles of operating systems. The operating system as a control program and as a resource allocator. The concept of a process and concurrency problems: synchronization, mutual exclusion, deadlock. Additional topics include memory management, file systems, process scheduling, threads, and protection.","CSC209H1, CSC258H1","","NOTE: Students not enrolled in the Computer Science Major or Specialist program at the UTSG, UTM, or UTSC are limited to a maximum of three 300-/400-level CSC/ECE half-courses.","","F","20199","The Physical and Mathematical Universes (5)"
"CSC369H1-S-20199",30241,"CSC369H1","CSC","Computer Science (CSC) (ECE)","Operating Systems","Principles of operating systems. The operating system as a control program and as a resource allocator. The concept of a process and concurrency problems: synchronization, mutual exclusion, deadlock. Additional topics include memory management, file systems, process scheduling, threads, and protection.","CSC209H1, CSC258H1","","NOTE: Students not enrolled in the Computer Science Major or Specialist program at the UTSG, UTM, or UTSC are limited to a maximum of three 300-/400-level CSC/ECE half-courses.","","S","20199","The Physical and Mathematical Universes (5)"
"CSC373H1-F-20199",30242,"CSC373H1","CSC","Computer Science (CSC) (ECE)","Algorithm Design, Analysis & Complexity","Standard algorithm design techniques: divide-and-conquer, greedy strategies, dynamic programming, linear programming, randomization, network flows, approximation algorithms. Brief introduction to NP-completeness: polynomial time reductions, examples of various NP-complete problems, self-reducibility. Additional topics may include approximation and randomized algorithms. Students will be expected to show good design principles and adequate skills at reasoning about the correctness and complexity of algorithms.","CSC263H1/CSC265H1","","CSC375H1. NOTE: Students not enrolled in the Computer Science Major or Specialist program at the UTSG, UTM, or UTSC are limited to a maximum of three 300-/400-level CSC/ECE half-courses.","","F","20199","The Physical and Mathematical Universes (5)"
"CSC373H1-S-20199",30242,"CSC373H1","CSC","Computer Science (CSC) (ECE)","Algorithm Design, Analysis & Complexity","Standard algorithm design techniques: divide-and-conquer, greedy strategies, dynamic programming, linear programming, randomization, network flows, approximation algorithms. Brief introduction to NP-completeness: polynomial time reductions, examples of various NP-complete problems, self-reducibility. Additional topics may include approximation and randomized algorithms. Students will be expected to show good design principles and adequate skills at reasoning about the correctness and complexity of algorithms.","CSC263H1/CSC265H1","","CSC375H1. NOTE: Students not enrolled in the Computer Science Major or Specialist program at the UTSG, UTM, or UTSC are limited to a maximum of three 300-/400-level CSC/ECE half-courses.","","S","20199","The Physical and Mathematical Universes (5)"
"CSC384H1-F-20199",30243,"CSC384H1","CSC","Computer Science (CSC) (ECE)","Introduction to Artificial Intelligence","Theories and algorithms that capture (or approximate) some of the core elements of computational intelligence. Topics include: search; logical representations and reasoning, classical automated planning, representing and reasoning with uncertainty, learning, decision making (planning) under uncertainty. Assignments provide practical experience, in both theory and programming, of the core topics.","(CSC263H1/CSC265H1, STA247H1/STA255H1/STA257H1)/Permission of the Cognitive Science Director","","NOTE: Students not enrolled in the Computer Science Major or Specialist program at the UTSG, UTM, or UTSC are limited to a maximum of three 300-/400-level CSC/ECE half-courses.","CSC324H1","F","20199","The Physical and Mathematical Universes (5)"
"CSC384H1-S-20199",30243,"CSC384H1","CSC","Computer Science (CSC) (ECE)","Introduction to Artificial Intelligence","Theories and algorithms that capture (or approximate) some of the core elements of computational intelligence. Topics include: search; logical representations and reasoning, classical automated planning, representing and reasoning with uncertainty, learning, decision making (planning) under uncertainty. Assignments provide practical experience, in both theory and programming, of the core topics.","(CSC263H1/CSC265H1, STA247H1/STA255H1/STA257H1)/Permission of the Cognitive Science Director","","NOTE: Students not enrolled in the Computer Science Major or Specialist program at the UTSG, UTM, or UTSC are limited to a maximum of three 300-/400-level CSC/ECE half-courses.","CSC324H1","S","20199","The Physical and Mathematical Universes (5)"
"CSC399Y1-Y-20199",30248,"CSC399Y1","CSC","Computer Science (CSC) (ECE)","Research Opportunity Program","Credit course for supervised participation in faculty research project. Details at http://www.artsci.utoronto.ca/current/course/rop. Not eligible for CR/NCR option.","","","","","Y","20199",""
"CSC401H1-S-20199",30249,"CSC401H1","CSC","Computer Science (CSC) (ECE)","Natural Language Computing","Introduction to techniques involving natural language processing and speech in applications such as information retrieval, speech recognition and synthesis, machine translation, summarization, and dialoque. N-grams, corpus analysis, neural methods, and information theory. Python and other software.","CSC207H1/CSC209H1; STA247H1/STA255H1/STA257H1","","NOTE: Students not enrolled in the Computer Science Major or Specialist program at the UTSG, UTM, or UTSC are limited to a maximum of three 300-/400-level CSC/ECE half-courses.","MAT221H1/MAT223H1/MAT240H1 is strongly recommended","S","20199","The Physical and Mathematical Universes (5)"
"CSC404H1-F-20199",30250,"CSC404H1","CSC","Computer Science (CSC) (ECE)","Introduction to Video Game Design","Concepts and techniques for the design and development of electronic games. History, social issues, and story elements. The business of game development and game promotion. Software engineering, artificial intelligence, and graphics elements. Level and model design. Audio elements. Practical assignments leading to team implementation of a complete game.","CSC301H1/CSC318H1/CSC384H1/CSC418H1","","NOTE: Students not enrolled in the Computer Science Major or Specialist program at the UTSG, UTM, or UTSC are limited to a maximum of three 300-/400-level CSC/ECE half-courses.","","F","20199","Creative and Cultural Representations (1)"
"CSC404H1-S-20199",30250,"CSC404H1","CSC","Computer Science (CSC) (ECE)","Introduction to Video Game Design","Concepts and techniques for the design and development of electronic games. History, social issues, and story elements. The business of game development and game promotion. Software engineering, artificial intelligence, and graphics elements. Level and model design. Audio elements. Practical assignments leading to team implementation of a complete game.","CSC301H1/CSC318H1/CSC384H1/CSC418H1","","NOTE: Students not enrolled in the Computer Science Major or Specialist program at the UTSG, UTM, or UTSC are limited to a maximum of three 300-/400-level CSC/ECE half-courses.","","S","20199","Creative and Cultural Representations (1)"
"CSC410H1-F-20199",30251,"CSC410H1","CSC","Computer Science (CSC) (ECE)","Software Testing and Verification","Concepts and state-of-the-art techniques in quality assessment for software engineering; quality attributes; formal specifications and their analysis; testing, verification, and validation.","CSC207H1, CSC236H1/CSC240H1","","NOTE: Students not enrolled in the Computer Science Major or Specialist program at the UTSG, UTM, or UTSC are limited to a maximum of three 300-/400-level CSC/ECE half-courses.","CSC330H1","F","20199","The Physical and Mathematical Universes (5)"
"CSC412H1-S-20199",30253,"CSC412H1","CSC","Computer Science (CSC) (ECE)","Probabilistic Learning and Reasoning","An introduction to probability as a means of representing and reasoning with uncertain knowledge. Qualitative and quantitative specification of probability distributions using probabilistic graphical models. Algorithms for inference and probabilistic reasoning with graphical models. Statistical approaches and algorithms for learning probability models from empirical data. Applications of these models in artificial intelligence and machine learning.","CSC411H1/STA314H1","","NOTE: Students not enrolled in the Computer Science Major or Specialist program at the UTSG, UTM, or UTSC are limited to a maximum of three 300-/400-level CSC/ECE half-courses.","","S","20199","The Physical and Mathematical Universes (5)"
"CSC413H1-S-20199",34726,"CSC413H1","CSC","Computer Science (CSC) (ECE)","Neural Networks and Deep Learning","An introduction to neural networks and deep learning. Backpropagation and automatic differentiation. Architectures: convolutional networks and recurrent neural networks. Methods for improving optimization and generalization. Neural networks for unsupervised and reinforcement learning.","CSC311H1/CSC411H1/STA314H1, MAT235Y1/MAT237Y1/MAT257Y1, MAT221H1/MAT223H1/MAT240H1","","CSC321H1/CSC421H1. NOTE: Students not enrolled in the Computer Science Major or Specialist program at the UTSG, UTM, or UTSC are limited to a maximum of three 300-/400-level CSC/ECE half-courses.","","S","20199","The Physical and Mathematical Universes (5)"
"CSC418H1-F-20199",30254,"CSC418H1","CSC","Computer Science (CSC) (ECE)","Computer Graphics","Identification and characterization of the objects manipulated in computer graphics, the operations possible on these objects, efficient algorithms to perform these operations, and interfaces to transform one type of object to another. Display devices, display data structures and procedures, graphical input, object modelling, transformations, illumination models, primary and secondary light effects; graphics packages and systems. Students, individually or in teams, implement graphical algorithms or entire graphics systems.","CSC209H1/proficiency in C or C++, MAT235Y1/MAT237Y1/MAT257Y1, MAT221H1/MAT223H1/MAT240H1. Prerequisite for Engineering students only: ECE345H1 or ECE352H1","","NOTE: Students not enrolled in the Computer Science Major or Specialist program at the UTSG, UTM, or UTSC are limited to a maximum of three 300-/400-level CSC/ECE half-courses.","MAT237Y1, MAT244H1","F","20199","The Physical and Mathematical Universes (5)"
"CSC418H1-S-20199",30254,"CSC418H1","CSC","Computer Science (CSC) (ECE)","Computer Graphics","Identification and characterization of the objects manipulated in computer graphics, the operations possible on these objects, efficient algorithms to perform these operations, and interfaces to transform one type of object to another. Display devices, display data structures and procedures, graphical input, object modelling, transformations, illumination models, primary and secondary light effects; graphics packages and systems. Students, individually or in teams, implement graphical algorithms or entire graphics systems.","CSC209H1/proficiency in C or C++, MAT235Y1/MAT237Y1/MAT257Y1, MAT221H1/MAT223H1/MAT240H1. Prerequisite for Engineering students only: ECE345H1 or ECE352H1","","NOTE: Students not enrolled in the Computer Science Major or Specialist program at the UTSG, UTM, or UTSC are limited to a maximum of three 300-/400-level CSC/ECE half-courses.","MAT237Y1, MAT244H1","S","20199","The Physical and Mathematical Universes (5)"
"CSC420H1-F-20199",30255,"CSC420H1","CSC","Computer Science (CSC) (ECE)","Introduction to Image Understanding","Introduction to basic concepts in computer vision. Extraction of image features at multiple scales. Robust estimation of model parameters. Multiview geometry and reconstruction. Image motion estimation and tracking. Object recognition. Topics in scene understanding as time permits.","CSC263H1/CSC265H1, (MAT135H1, MAT136H1)/MAT135Y1/MAT137Y1/MAT157Y1, MAT221H1/MAT223H1/MAT240H1","","NOTE: Students not enrolled in the Computer Science Major or Specialist program at the UTSG, UTM, or UTSC are limited to a maximum of three 300-/400-level CSC/ECE half-courses.","CSC320H1","F","20199","The Physical and Mathematical Universes (5)"
"CSC428H1-F-20199",30257,"CSC428H1","CSC","Computer Science (CSC) (ECE)","Human-Computer Interaction","Understanding human behaviour as it applies to user interfaces: work activity analysis, observational techniques, questionnaire administration, and unobtrusive measures. Operating parameters of the human cognitive system, task analysis and cognitive modelling techniques and their application to designing interfaces. Interface representations and prototyping tools. Cognitive walkthroughs, usability studies and verbal protocol analysis. Case studies of specific user interfaces.","CSC318H1; STA247H1/STA255H1/STA257H1; CSC209H1/proficiency C++ or Java","","NOTE: Students not enrolled in the Computer Science Major or Specialist program at the UTSG, UTM, or UTSC are limited to a maximum of three 300-/400-level CSC/ECE half-courses.","A course in PSY; CSC209H1; (STA248H1/STA250H1/STA261H1)/(PSY201H1, PSY202H1)/(SOC202H1, SOC300H1)","F","20199","The Physical and Mathematical Universes (5)"
"CSC428H1-S-20199",30257,"CSC428H1","CSC","Computer Science (CSC) (ECE)","Human-Computer Interaction","Understanding human behaviour as it applies to user interfaces: work activity analysis, observational techniques, questionnaire administration, and unobtrusive measures. Operating parameters of the human cognitive system, task analysis and cognitive modelling techniques and their application to designing interfaces. Interface representations and prototyping tools. Cognitive walkthroughs, usability studies and verbal protocol analysis. Case studies of specific user interfaces.","CSC318H1; STA247H1/STA255H1/STA257H1; CSC209H1/proficiency C++ or Java","","NOTE: Students not enrolled in the Computer Science Major or Specialist program at the UTSG, UTM, or UTSC are limited to a maximum of three 300-/400-level CSC/ECE half-courses.","A course in PSY; CSC209H1; (STA248H1/STA250H1/STA261H1)/(PSY201H1, PSY202H1)/(SOC202H1, SOC300H1)","S","20199","The Physical and Mathematical Universes (5)"
"CSC436H1-F-20199",30258,"CSC436H1","CSC","Computer Science (CSC) (ECE)","Numerical Algorithms","Numerical algorithms for the algebraic eigenvalue problem, approximation, integration, and the solution of ordinary differential equations. Emphasis is on the convergence, stability, and efficiency properties of the algorithms.","CSC336H1/CSC350H1","","CSC351H1. NOTE: Students not enrolled in the Computer Science Major or Specialist program at the UTSG, UTM, or UTSC are limited to a maximum of three 300-/400-level CSC/ECE half-courses.","MAT235Y1/MAT237Y1/MAT257Y1","F","20199","The Physical and Mathematical Universes (5)"
"CSC438H1-F-20199",30259,"CSC438H1","CSC","Computer Science (CSC) (ECE)","Computability and Logic","Computable functions, Church's thesis, unsolvable problems, recursively enumerable sets. Predicate calculus, including the completeness, compactness, and Lowenheim-Skolem theorems. Formal theories and the Gödel Incompleteness Theorem. Ordinarily offered in years alternating with CSC448H1.","(CSC363H1/CSC463H1)/CSC365H1/CSC373H1/CSC375H1/MAT247H1","","MAT309H1; PHL348H1. NOTE: Students not enrolled in the Computer Science Major or Specialist program at the UTSG, UTM, or UTSC are limited to a maximum of three 300-/400-level CSC/ECE half-courses.","","F","20199","The Physical and Mathematical Universes (5)"
"CSC454H1-F-20199",30263,"CSC454H1","CSC","Computer Science (CSC) (ECE)","The Business of Software","The software and internet industries; principles of operation for successful software enterprises; innovation and entrepreneurship; software business definition and planning; business models, market and product planning; product development, marketing, sales, and support; financial management and financing of high-technology ventures; management, leadership, and partnerships. Students will all write business plans in teams.","Five CSC half-courses at the 200-level or higher","","NOTE: Students not enrolled in the Computer Science Major or Specialist program at the UTSG, UTM, or UTSC are limited to a maximum of three 300-/400-level CSC/ECE half-courses.","","F","20199","The Physical and Mathematical Universes (5)"
"CSC454H1-S-20199",30263,"CSC454H1","CSC","Computer Science (CSC) (ECE)","The Business of Software","The software and internet industries; principles of operation for successful software enterprises; innovation and entrepreneurship; software business definition and planning; business models, market and product planning; product development, marketing, sales, and support; financial management and financing of high-technology ventures; management, leadership, and partnerships. Students will all write business plans in teams.","Five CSC half-courses at the 200-level or higher","","NOTE: Students not enrolled in the Computer Science Major or Specialist program at the UTSG, UTM, or UTSC are limited to a maximum of three 300-/400-level CSC/ECE half-courses.","","S","20199","The Physical and Mathematical Universes (5)"
"CSC458H1-F-20199",30265,"CSC458H1","CSC","Computer Science (CSC) (ECE)","Computer Networking Systems","Computer networks with an emphasis on network programming and applications. An overview of networking basics: layering, naming, and addressing, packet switching fundamentals, socket programming, protocols, congestion control, routing, network security, wireless networks, multimedia, web 2.0, software-defined networking, and online social networks.<br /><br />","CSC209H1, CSC258H1, CSC263H1/CSC265H1, STA247H1/STA255H1/STA257H1/ECO227Y1","","NOTE: Students not enrolled in the Computer Science Major or Specialist program at the UTSG, UTM, or UTSC are limited to a maximum of three 300-/400-level CSC/ECE half-courses.","","F","20199","The Physical and Mathematical Universes (5)"
"CSC463H1-S-20199",30266,"CSC463H1","CSC","Computer Science (CSC) (ECE)","Computational Complexity and Computability","Introduction to the theory of computability: Turing machines and other models of computation, Church’s thesis, computable and noncomputable functions, recursive and recursively enumerable sets, many-one reductions. Introduction to complexity theory: P, NP, polynomial time reducibility, NP-completeness, self-reducibility, space complexity (L, NL, PSPACE and completeness for those classes), hierarchy theorems, and provably intractable problems.","CSC236H1/CSC240H1","","CSC363H1/CSCC63H3, CSC365H1. NOTE: Students not enrolled in the Computer Science Major or Specialist program at the UTSG, UTM, or UTSC are limited to a maximum of three 300-/400-level CSC/ECE half-courses.","","S","20199","The Physical and Mathematical Universes (5)"
"CSC465H1-F-20199",30267,"CSC465H1","CSC","Computer Science (CSC) (ECE)","Formal Methods in Software Design","Using mathematics to write error-free programs. Proving each refinement; identifying errors as they are made. Program development to meet specifications; modifications that preserve correctness. Useful for all programming; essential for programs that lives depend on. Basic logic, formal specifications, refinement. Conditional, sequential, parallel, interaction, probabilistic programming, and functional programming.","CSC236H1/CSC240H1/MAT309H1","","NOTE: Students not enrolled in the Computer Science Major or Specialist program at the UTSG, UTM, or UTSC are limited to a maximum of three 300-/400-level CSC/ECE half-courses.","CSC463H1","F","20199","The Physical and Mathematical Universes (5)"
"CSC466H1-S-20199",30268,"CSC466H1","CSC","Computer Science (CSC) (ECE)","Numerical Methods for Optimization Problems","Numerical methods for unconstrained optimization problems, in particular line search methods and trust region methods. Topics include steepest descent, Newton's method, quasi-Newton methods, conjugate gradient methods and techniques for large problems. This course will normally be offered every other year.","CSC336H1, MAT221H1/MAT223H1/MAT240H1, MAT235Y1/MAT237Y1/MAT257Y1","","NOTE: Students not enrolled in the Computer Science Major or Specialist program at the UTSG, UTM, or UTSC are limited to a maximum of three 300-/400-level CSC/ECE half-courses.","","S","20199","The Physical and Mathematical Universes (5)"
"CSC469H1-F-20199",30269,"CSC469H1","CSC","Computer Science (CSC) (ECE)","Operating Systems Design and Implementation","An in-depth exploration of the major components of operating systems with an emphasis on the techniques, algorithms, and structures used to implement these components in modern systems. Project-based study of process management, scheduling, memory management, file systems, and networking is used to build insight into the intricacies of a large concurrent system.","CSC369H1","","NOTE: Students not enrolled in the Computer Science Major or Specialist program at the UTSG, UTM, or UTSC are limited to a maximum of three 300-/400-level CSC/ECE half-courses.","","F","20199","The Physical and Mathematical Universes (5)"
"CSC473H1-S-20199",30270,"CSC473H1","CSC","Computer Science (CSC) (ECE)","Advanced Algorithm Design","Advanced algorithm design techniques, with emphasis on the role that geometry, approximation, randomization, and parallelism play in modern algorithms. Examples will be drawn from linear programming and basics of continuous optimization; randomized algorithms for string matching, graph problems, and number theory problems; streaming algorithms and parallel algorithms in the Map-Reduce model.","CSC373H1, MAT221H1/MAT223H1/MAT240H1","","NOTE: Students not enrolled in the Computer Science Major or Specialist program at the UTSG, UTM, or UTSC are limited to a maximum of three 300-/400-level CSC/ECE half-courses.","","S","20199","The Physical and Mathematical Universes (5)"
"CSC485H1-F-20199",30271,"CSC485H1","CSC","Computer Science (CSC) (ECE)","Computational Linguistics","Computational linguistics and the processing of language by computer. Topics include: context-free grammars; chart parsing, statistical parsing; semantics and semantic interpretation; ambiguity resolution techniques; reference resolution. Emphasis on statistical learning methods for lexical, syntactic, and semantic knowledge.","STA247H1/STA255H1/STA257H1; CSC209H1","","NOTE: Students not enrolled in the Computer Science Major or Specialist program at the UTSG, UTM, or UTSC are limited to a maximum of three 300-/400-level CSC/ECE half-courses.","CSC324H1/CSC384H1","F","20199","The Physical and Mathematical Universes (5)"
"CSC488H1-F-20199",30274,"CSC488H1","CSC","Computer Science (CSC) (ECE)","Compilers and Interpreters","The structure of compilers, Programming language processing. Scanning based on regular expressions, Parsing using context free grammars, Semantic analysis (type and usage checking), Compiler dictionaries and tables. Runtime organization and storage allocation, code generation, optimization. Use of modern compiler building tools. Course project involves building a complete compiler.","CSC258H1, CSC324H1, CSC263H1/CSC265H1","","NOTE: Students not enrolled in the Computer Science Major or Specialist program at the UTSG, UTM, or UTSC are limited to a maximum of three 300-/400-level CSC/ECE half-courses.","","F","20199","The Physical and Mathematical Universes (5)"
"CSC491H1-F-20199",30276,"CSC491H1","CSC","Computer Science (CSC) (ECE)","Capstone Design Project","This half-course gives students experience solving a substantial problem that may span several areas of Computer Science. Students will define the scope of the problem, develop a solution plan, produce a working implementation, and present their work using written, oral, and (if suitable) video reports. Class time will focus on the project, but may include some lectures. The class will be small and highly interactive. Project themes change each year. Contact the Computer Science Undergraduate Office for information about this year’s topic themes, required preparation, and course enrolment procedures. Not eligible for CR/NCR option.","Permission of the instructor","","NOTE: Students not enrolled in the Computer Science Major or Specialist program at the UTSG, UTM, or UTSC are limited to a maximum of three 300-/400-level CSC/ECE half-courses.","","F","20199","The Physical and Mathematical Universes (5)"
"CSC491H1-S-20199",30276,"CSC491H1","CSC","Computer Science (CSC) (ECE)","Capstone Design Project","This half-course gives students experience solving a substantial problem that may span several areas of Computer Science. Students will define the scope of the problem, develop a solution plan, produce a working implementation, and present their work using written, oral, and (if suitable) video reports. Class time will focus on the project, but may include some lectures. The class will be small and highly interactive. Project themes change each year. Contact the Computer Science Undergraduate Office for information about this year’s topic themes, required preparation, and course enrolment procedures. Not eligible for CR/NCR option.","Permission of the instructor","","NOTE: Students not enrolled in the Computer Science Major or Specialist program at the UTSG, UTM, or UTSC are limited to a maximum of three 300-/400-level CSC/ECE half-courses.","","S","20199","The Physical and Mathematical Universes (5)"
"CSC494H1-F-20199",30278,"CSC494H1","CSC","Computer Science (CSC) (ECE)","Computer Science Project","This half-course involves a significant project in any area of Computer Science. The project may be undertaken individually or in small groups. The course is offered by arrangement with a Computer Science faculty member. Not eligible for CR/NCR option.","Three 300-/400-level CSC half-courses, and permission of the Associate Chair, Undergraduate Studies. Contact the Computer Science Undergraduate Office for information about course enrolment procedures.","","","","F","20199","The Physical and Mathematical Universes (5)"
"CSC494H1-S-20199",30278,"CSC494H1","CSC","Computer Science (CSC) (ECE)","Computer Science Project","This half-course involves a significant project in any area of Computer Science. The project may be undertaken individually or in small groups. The course is offered by arrangement with a Computer Science faculty member. Not eligible for CR/NCR option.","Three 300-/400-level CSC half-courses, and permission of the Associate Chair, Undergraduate Studies. Contact the Computer Science Undergraduate Office for information about course enrolment procedures.","","","","S","20199","The Physical and Mathematical Universes (5)"
"CSC494H1-Y-20199",30278,"CSC494H1","CSC","Computer Science (CSC) (ECE)","Computer Science Project","This half-course involves a significant project in any area of Computer Science. The project may be undertaken individually or in small groups. The course is offered by arrangement with a Computer Science faculty member. Not eligible for CR/NCR option.","Three 300-/400-level CSC half-courses, and permission of the Associate Chair, Undergraduate Studies. Contact the Computer Science Undergraduate Office for information about course enrolment procedures.","","","","Y","20199","The Physical and Mathematical Universes (5)"
"CSC494Y1-Y-20199",30279,"CSC494Y1","CSC","Computer Science (CSC) (ECE)","Project in CSC","","","","","","Y","20199",""
"CSC495H1-F-20199",30280,"CSC495H1","CSC","Computer Science (CSC) (ECE)","Computer Science Project","This half-course involves a significant project in any area of Computer Science. The project may be undertaken individually or in small groups. The course is offered by arrangement with a Computer Science faculty member. Not eligible for CR/NCR option.","Three 300-/400-level CSC half-courses, and permission of the Associate Chair, Undergraduate Studies. Contact the Computer Science Undergraduate Office for information about course enrolment procedures.","","","","F","20199","The Physical and Mathematical Universes (5)"
"CSC495H1-S-20199",30280,"CSC495H1","CSC","Computer Science (CSC) (ECE)","Computer Science Project","This half-course involves a significant project in any area of Computer Science. The project may be undertaken individually or in small groups. The course is offered by arrangement with a Computer Science faculty member. Not eligible for CR/NCR option.","Three 300-/400-level CSC half-courses, and permission of the Associate Chair, Undergraduate Studies. Contact the Computer Science Undergraduate Office for information about course enrolment procedures.","","","","S","20199","The Physical and Mathematical Universes (5)"
"CSC495H1-Y-20199",30280,"CSC495H1","CSC","Computer Science (CSC) (ECE)","Computer Science Project","This half-course involves a significant project in any area of Computer Science. The project may be undertaken individually or in small groups. The course is offered by arrangement with a Computer Science faculty member. Not eligible for CR/NCR option.","Three 300-/400-level CSC half-courses, and permission of the Associate Chair, Undergraduate Studies. Contact the Computer Science Undergraduate Office for information about course enrolment procedures.","","","","Y","20199","The Physical and Mathematical Universes (5)"
